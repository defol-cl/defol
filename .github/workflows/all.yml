## Action Secrets:
# - AWS_ACCESS_KEY_ID
# - AWS_SECRET_ACCESS_KEY
# - AWS_REGION

name: build-app

on:
  push:
    branches:
      - master
      - stage
      - develop

jobs:
  params:
    runs-on: ubuntu-latest
    outputs:
      update-libs: ${{ steps.commit-message-libs.outputs.textFound }}
      libs: ${{ steps.packages-libs-changed.outputs.any_changed }}
      root: ${{ steps.packages-root-changed.outputs.any_changed }}
      app-backend: ${{ steps.packages-app-backend-changed.outputs.any_changed }}
      app-frontend: ${{ steps.packages-app-frontend-changed.outputs.any_changed }}
      admin-backend: ${{ steps.packages-admin-backend-changed.outputs.any_changed }}
      admin-frontend: ${{ steps.packages-admin-frontend-changed.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: commit-message-libs
        uses: dlouisenz/last-commit-message-text-finder-action@v1.5
        with:
          textToFind: "@libs-update"
      - id: packages-libs-changed
        name: detect changes on packages/libs
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            packages/libs
      - id: packages-root-changed
        name: detect changes on packages/root
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            packages/root
      - id: packages-app-backend-changed
        name: detect changes on packages/app-backend
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            .github/workflows/all.yml
            packages/app-backend
      - id: packages-app-frontend-changed
        name: detect changes on packages/app-frontend
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            .github/workflows/all.yml
            packages/app-frontend
      - id: packages-admin-backend-changed
        name: detect changes on packages/admin-backend
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            .github/workflows/all.yml
            packages/admin-backend
      - id: packages-admin-frontend-changed
        name: detect changes on packages/admin-frontend
        uses: tj-actions/changed-files@v1.1.3
        with:
          files: |
            .github/workflows/all.yml
            packages/admin-frontend

  publish-libs:
    runs-on: ubuntu-latest
    needs: [params, publish-root]
    if: always() && needs.params.outputs.update-libs == 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - name: npm-install
        working-directory: ./packages/libs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install
      - name: npm-publish
        working-directory: ./packages/libs
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

  publish-root:
    runs-on: ubuntu-latest
    needs: params
    if: always() && needs.params.outputs.update-libs == 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - name: npm-install
        working-directory: ./packages/root
        run: npm install --production
      - name: npm-publish
        working-directory: ./packages/root
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish

  app-backend:
    runs-on: ubuntu-latest
    needs: [params, publish-libs]
    if: always() && (needs.params.outputs.update-libs == 'true' || needs.params.outputs.app-backend == 'true')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - uses: aws-actions/setup-sam@v1
      - name: installing typescript
        run: npm install -g typescript
      - name: npm-install-production
        working-directory: ./packages/app-backend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install --production
      - name: lambda-layer
        working-directory: ./packages/app-backend
        run: |
          mkdir -p dist/layer/nodejs
          cp -r node_modules/ dist/layer/nodejs/
      - name: npm-install
        working-directory: ./packages/app-backend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install
      - name: npm-run-build
        working-directory: ./packages/app-backend
        run: npm run-script build
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - id: branch
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/base/resources-bucket-name
          env_variable_name: RESOURCE_S3_BUCKET
      - name: upload-openapi
        uses: zdurham/s3-upload-github-action@master
        env:
          S3_BUCKET: ${{ env.RESOURCE_S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FILE: ./packages/app-backend/openapi.yaml
          S3_KEY: ${{ format('defol-{0}-app-backend/{1}/openapi.yaml', steps.branch.outputs.name, github.sha) }}
      - name: sam-package
        working-directory: ./packages/app-backend
        run: |
          sam package \
          --s3-bucket ${{ env.RESOURCE_S3_BUCKET }} \
          --output-template-file packaged.yaml \
          --template-file cloudformation.yaml
      - name: sam-deploy
        working-directory: ./packages/app-backend
        run: |
          sam deploy --template-file packaged.yaml \
          --no-confirm-changeset --no-fail-on-empty-changeset \
          --stack-name defol-${{ steps.branch.outputs.name }}-app-backend \
          --s3-bucket ${{ env.RESOURCE_S3_BUCKET }} \
          --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
          --parameter-overrides \
          ResourcesBucket=${{ env.RESOURCE_S3_BUCKET }} \
          Sha=${{ github.sha }} \
          Branch=${{ steps.branch.outputs.name }} \
          ConvenioTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio \
          ConvenioModeradorTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio-moderador \
          ConvenioContactoTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio-contacto \
          PreguntaTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-pregunta \
          CategoriaTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-categoria \
          EmailIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-EmailIndex \
          EstadoIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-estadoIndex \
          FechaActualizacionIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-fechaActualizacionIndex \
          ConvenioCodIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-convenioCodIndex \
          ContactoEmailIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-contactoEmailIndex \
          UserConvenioIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-userConvenioCodIndex \
          UserPoolArn=/defol/${{ steps.branch.outputs.name }}/app/user-pool-arn

  app-frontend:
    runs-on: ubuntu-latest
    needs: [ params, publish-root ]
    if: always() && (needs.params.outputs.update-libs == 'true' || needs.params.outputs.app-frontend == 'true')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - id: branch
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - id: get-base-cognito-user-pool-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/app/user-pool-id
          env_variable_name: USER_POOL_ID
      - id: get-base-cognito-user-pool-client-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/app/user-pool-client-id
          env_variable_name: USER_POOL_CLIENT_ID
      - id: get-base-cognito-user-pool-region-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/app/user-pool-region
          env_variable_name: USER_POOL_REGION
      - name: making-env-file
        working-directory: ./packages/app-frontend
        run: |
          cat << EOF > .env
          REACT_APP_USER_POOL_ID=${{ env.USER_POOL_ID }}
          REACT_APP_USER_POOL_CLIENT_ID=${{ env.USER_POOL_CLIENT_ID }}
          REACT_APP_USER_POOL_REGION=${{ env.USER_POOL_REGION }}
          EOF
      - name: npm-install
        working-directory: ./packages/app-frontend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install
      - name: npm-run-build
        working-directory: ./packages/app-frontend
        run: npm run-script build
      - id: get-app-frontend-cloudfront-distribution-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/app/cf-distribution-id
          env_variable_name: CFRONT_DIST_ID
      - id: get-app-frontend-bucket-name-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/app/frontend/bucket-name
          env_variable_name: S3_BUCKET
      - uses: kersvers/s3-sync-with-cloudfront-invalidation@v1.0.0
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ env.S3_BUCKET }}
          DISTRIBUTION_ID: ${{ env.CFRONT_DIST_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: ./packages/app-frontend/build

  admin-backend:
    runs-on: ubuntu-latest
    needs: [params, publish-libs]
    if: always() && (needs.params.outputs.update-libs == 'true' || needs.params.outputs.admin-backend == 'true')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - uses: aws-actions/setup-sam@v1
      - name: installing typescript
        run: npm install -g typescript
      - name: npm-install-production
        working-directory: ./packages/admin-backend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install --production
      - name: lambda-layer
        working-directory: ./packages/admin-backend
        run: |
          mkdir -p dist/layer/nodejs
          cp -r node_modules/ dist/layer/nodejs/
      - name: npm-install
        working-directory: ./packages/admin-backend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install
      - name: npm-run-build
        working-directory: ./packages/admin-backend
        run: npm run-script build
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - id: branch
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/base/resources-bucket-name
          env_variable_name: RESOURCE_S3_BUCKET
      - name: upload-openapi
        uses: zdurham/s3-upload-github-action@master
        env:
          S3_BUCKET: ${{ env.RESOURCE_S3_BUCKET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          FILE: ./packages/admin-backend/openapi.yaml
          S3_KEY: ${{ format('defol-{0}-admin-backend-stack/{1}/openapi.yaml', steps.branch.outputs.name, github.sha) }}
      - name: sam-package
        working-directory: ./packages/admin-backend
        run: |
          sam package \
          --s3-bucket ${{ env.RESOURCE_S3_BUCKET }} \
          --output-template-file packaged.yaml \
          --template-file cloudformation.yaml
      - name: sam-deploy
        working-directory: ./packages/admin-backend
        run: |
          sam deploy --template-file packaged.yaml \
          --no-confirm-changeset --no-fail-on-empty-changeset \
          --stack-name defol-${{ steps.branch.outputs.name }}-admin-backend-stack \
          --s3-bucket ${{ env.RESOURCE_S3_BUCKET }} \
          --capabilities CAPABILITY_IAM --region ${{ secrets.AWS_REGION }} \
          --parameter-overrides ResourcesBucket=${{ env.RESOURCE_S3_BUCKET }} Sha=${{ github.sha }} \
          Branch=${{ steps.branch.outputs.name }} \
          ConvenioTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio \
          ConvenioModeradorTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio-moderador \
          ConvenioContactoTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-convenio-contacto \
          PreguntaTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-pregunta \
          CategoriaTable=/defol/${{ steps.branch.outputs.name }}/base/resources-table-categoria \
          EmailIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-EmailIndex \
          EstadoIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-estadoIndex \
          FechaActualizacionIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-fechaActualizacionIndex \
          ConvenioCodIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-convenioCodIndex \
          ContactoEmailIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-contactoEmailIndex \
          UserConvenioIndex=/defol/${{ steps.branch.outputs.name }}/base/resources-table-index-userConvenioCodIndex \
          UserPoolArn=/defol/${{ steps.branch.outputs.name }}/admin/user-pool-arn

  admin-frontend:
    runs-on: ubuntu-latest
    needs: [ params, publish-root ]
    if: always() && (needs.params.outputs.update-libs == 'true' || needs.params.outputs.admin-frontend == 'true')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com
      - id: branch
        shell: bash
        run: echo "##[set-output name=name;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - id: get-base-cognito-user-pool-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/admin/user-pool-id
          env_variable_name: USER_POOL_ID
      - id: get-base-cognito-user-pool-client-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/admin/user-pool-client-id
          env_variable_name: USER_POOL_CLIENT_ID
      - id: get-base-cognito-user-pool-region-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/admin/user-pool-region
          env_variable_name: USER_POOL_REGION
      - name: making-env-file
        working-directory: ./packages/admin-frontend
        run: |
          cat << EOF > .env
          REACT_APP_USER_POOL_ID=${{ env.USER_POOL_ID }}
          REACT_APP_USER_POOL_CLIENT_ID=${{ env.USER_POOL_CLIENT_ID }}
          REACT_APP_USER_POOL_REGION=${{ env.USER_POOL_REGION }}
          EOF
      - name: npm-install
        working-directory: ./packages/admin-frontend
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install
      - name: npm-run-build
        working-directory: ./packages/admin-frontend
        run: npm run-script build
      - id: get-admin-frontend-cloudfront-distribution-id-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/admin/cf-distribution-id
          env_variable_name: CFRONT_DIST_ID
      - id: get-admin-frontend-bucket-name-ssm-parameter
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /defol/${{ steps.branch.outputs.name }}/admin/frontend/bucket-name
          env_variable_name: S3_BUCKET
      - uses: kersvers/s3-sync-with-cloudfront-invalidation@v1.0.0
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ env.S3_BUCKET }}
          DISTRIBUTION_ID: ${{ env.CFRONT_DIST_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: ./packages/admin-frontend/build
