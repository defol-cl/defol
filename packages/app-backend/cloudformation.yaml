AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::Serverless-2016-10-31

Description: Backend del portal de clientes de defol

Parameters:
  Branch:
    Type: String
    Description: Nombre de la rama
  ResourcesBucket:
    Type: String
    Description: Bucket que aloja los recursos
  Sha:
    Type: String
    Description: Identificador de la ejecuci√≥n del CICD
  ConvenioTable:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de tabla Convenio
  ConvenioModeradorTable:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de tabla Convenio-Moderador
  ConvenioContactoTable:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de tabla Convenio-Contacto
  PreguntaTable:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de tabla Pregunta
  CategoriaTable:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de tabla Categoria
  UsernameIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla Pregunta
  EstadoIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla Pregunta
  FechaActualizacionIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla Pregunta
  ConvenioCodIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla ConvenioModerador
  ContactoUsernameIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla ConvenioContacto
  UserConvenioIndex:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Nombre de indice de tabla Pregunta
  UserPoolArn:
    Type: AWS::SSM::Parameter::Value<AWS::String>
    Description: Arn del user pool de cognito

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 200
    MemorySize: 1024
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        CONVENIO_TABLE: !Ref ConvenioTable
        CONVENIO_MODERADOR_TABLE: !Ref ConvenioModeradorTable
        CONVENIO_CONTACTO_TABLE: !Ref ConvenioContactoTable
        PREGUNTA_TABLE: !Ref PreguntaTable
        CATEGORIA_TABLE: !Ref CategoriaTable
        PREGUNTA_USERNAME_INDEX: !Ref UsernameIndex
        PREGUNTA_ESTADO_INDEX: !Ref EstadoIndex
        PREGUNTA_FECHA_ACTUALIZACION_INDEX: !Ref FechaActualizacionIndex
        CONVENIO_COD_INDEX: !Ref ConvenioCodIndex
        CONTACTO_USERNAME_INDEX: !Ref ContactoUsernameIndex
        USER_CONVENIO_INDEX: !Ref UserConvenioIndex

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
      Policies:
        - PolicyName: WriteCloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: QueryDynamoDB
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Attributes
                  - dynamodb:LeadingKeys
                  - dynamodb:ReturnConsumedCapacity
                  - dynamodb:ReturnValues
                  - dynamodb:Select
                  - dynamodb:Query
                Resource: "*"

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: api
      Name: !Sub ${AWS::StackName}-api
      DefinitionBody:
        "Fn::Transform":
          Name: AWS::Include
          Parameters:
            Location: !Sub s3://${ResourcesBucket}/${AWS::StackName}/${Sha}/openapi.yaml
      Auth:
        Authorizers:
          CUPAuthorizer:
            UserPoolArn: !Ref UserPoolArn
            Type: COGNITO_USER_POOLS

  PreguntasGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/preguntas
      Handler: preguntas.get
      Role: !GetAtt LambdaRole.Arn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /preguntas
            Method: get

  PreguntasPost:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/preguntas
      Handler: preguntas.post
      Role: !GetAtt LambdaRole.Arn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /preguntas
            Method: post

  ResumenPreguntasGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/dashboard
      Handler: dashboard.resumenPreguntasGet
      Role: !GetAtt LambdaRole.Arn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /dashboard/resumen-preguntas
            Method: get

  UltimasActualizacionesGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/dashboard
      Handler: dashboard.ultimasActualizacionesGet
      Role: !GetAtt LambdaRole.Arn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /dashboard/ultimas-actualizaciones
            Method: get

  ConveniosGet:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/src/convenios
      Handler: convenios.get
      Role: !GetAtt LambdaRole.Arn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /convenios
            Method: get

  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Runtime dependencies for Lambdas
      ContentUri: ./dist/layer
      CompatibleRuntimes:
        - nodejs12.x
      RetentionPolicy: Retain

  ApiGatewayDomainNameParamater:
    Type: AWS::SSM::Parameter
    Properties:
      Description: API Gateway domain name paramater
      Name: !Sub /defol/${Branch}/app/backend/api-gateway-domain-name
      Type: String
      Value: !Sub ${Api}.execute-api.${AWS::Region}.amazonaws.com
